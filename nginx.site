server {
        # Update this line to be your domain
        server_name [YOUR HA HOST HERE] [YOUR MQTT HOST HERE];

        # These shouldn't need to be changed
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;
        return 301 https://$host$request_uri;
}

server {
	listen 443;
	server_name [YOUR MQTT HOST HERE];

	ssl_certificate /etc/letsencrypt/live/[YOUR MQTT HOST HERE]/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/[YOUR MQTT HOST HERE]/privkey.pem;
	ssl_dhparam /etc/nginx/ssl/dhparams.pem;


	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
	ssl on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;

	proxy_buffering off;

	location / {
	    proxy_pass https://[YOUR MQTT IP HERE]:8443;
	    proxy_set_header Host $host;
	    proxy_redirect http:// https://;
	    proxy_http_version 1.1;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection $connection_upgrade;
	}
}

server {
	listen 443;
	server_name [YOUR HA HOST HERE];

	ssl_certificate /etc/letsencrypt/live/[YOUR HA HOST HERE]/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/[YOUR HA HOST HERE]/privkey.pem;
	ssl_dhparam /etc/nginx/ssl/dhparams.pem;


	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
	ssl on;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;

	proxy_buffering off;

	location / {
	    proxy_pass http://[YOUR HA IP HERE]:8123;
	    proxy_set_header Host $host;
	    proxy_redirect http:// https://;
	    proxy_http_version 1.1;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection $connection_upgrade;
	}
}

